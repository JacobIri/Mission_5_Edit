// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mission_4.Models;

namespace Mission_4.Migrations
{
    [DbContext(typeof(MovieFromContext))]
    [Migration("20220303034711_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22");

            modelBuilder.Entity("Mission_4.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryID");

                    b.ToTable("CategoryEntry");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            CategoryName = "Action"
                        },
                        new
                        {
                            CategoryID = 2,
                            CategoryName = "Adventure"
                        },
                        new
                        {
                            CategoryID = 3,
                            CategoryName = "Comedy"
                        },
                        new
                        {
                            CategoryID = 4,
                            CategoryName = "Cop / Detective"
                        },
                        new
                        {
                            CategoryID = 5,
                            CategoryName = "Documentary"
                        },
                        new
                        {
                            CategoryID = 6,
                            CategoryName = "Drama"
                        },
                        new
                        {
                            CategoryID = 7,
                            CategoryName = "Drama Comedy"
                        },
                        new
                        {
                            CategoryID = 8,
                            CategoryName = "Family"
                        },
                        new
                        {
                            CategoryID = 9,
                            CategoryName = "Fantasy"
                        },
                        new
                        {
                            CategoryID = 10,
                            CategoryName = "Historical Epic"
                        },
                        new
                        {
                            CategoryID = 11,
                            CategoryName = "Heist"
                        },
                        new
                        {
                            CategoryID = 12,
                            CategoryName = "Horror"
                        },
                        new
                        {
                            CategoryID = 13,
                            CategoryName = "Kids"
                        },
                        new
                        {
                            CategoryID = 14,
                            CategoryName = "Musical"
                        },
                        new
                        {
                            CategoryID = 15,
                            CategoryName = "Mystery"
                        },
                        new
                        {
                            CategoryID = 16,
                            CategoryName = "Parody"
                        },
                        new
                        {
                            CategoryID = 17,
                            CategoryName = "Period Piece"
                        },
                        new
                        {
                            CategoryID = 18,
                            CategoryName = "Romance"
                        },
                        new
                        {
                            CategoryID = 19,
                            CategoryName = "Romantic Comedy"
                        },
                        new
                        {
                            CategoryID = 20,
                            CategoryName = "Spaghetti Western"
                        },
                        new
                        {
                            CategoryID = 21,
                            CategoryName = "Sports"
                        },
                        new
                        {
                            CategoryID = 22,
                            CategoryName = "Superhero"
                        },
                        new
                        {
                            CategoryID = 23,
                            CategoryName = "Thriller"
                        },
                        new
                        {
                            CategoryID = 24,
                            CategoryName = "Undeclared"
                        },
                        new
                        {
                            CategoryID = 25,
                            CategoryName = "Western"
                        },
                        new
                        {
                            CategoryID = 26,
                            CategoryName = "War"
                        });
                });

            modelBuilder.Entity("Mission_4.Models.FormResponse", b =>
                {
                    b.Property<int>("FormId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Director")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Edited")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LentTo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rating")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("FormId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Responses");

                    b.HasData(
                        new
                        {
                            FormId = 1,
                            CategoryId = 3,
                            Director = "John Hughes",
                            Edited = false,
                            Rating = "PG13",
                            Title = "Ferris Bueller's Day Off",
                            Year = 1986
                        },
                        new
                        {
                            FormId = 2,
                            CategoryId = 7,
                            Director = "Taika Waititi",
                            Edited = false,
                            Rating = "PG13",
                            Title = "Jojo Rabbit",
                            Year = 2019
                        },
                        new
                        {
                            FormId = 3,
                            CategoryId = 3,
                            Director = "Danny Boyle",
                            Edited = false,
                            Rating = "PG13",
                            Title = "Yesterday",
                            Year = 2019
                        });
                });

            modelBuilder.Entity("Mission_4.Models.FormResponse", b =>
                {
                    b.HasOne("Mission_4.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
